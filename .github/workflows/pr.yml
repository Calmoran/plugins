name: OpenOSRS - CI (PR)

on:
  pull_request:
    types: ['opened', 'edited', 'reopened', 'synchronize']

jobs:
  pr-lint:
    name: PR title
    runs-on: ubuntu-latest

    steps:
      - name: PR title lint
        if: github.event_name == 'pull_request'
        uses: seferov/pr-lint-action@v1.0.3
        with:
          title-regex: '^([\w-/]+): \w+'

  build:
    runs-on: ubuntu-latest
    name: Build

    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@master
        with:
          java-version: 11

      - uses: actions/checkout@v1

      - uses: actions/checkout@v1
        with:
          repository: Owain94/runelite-extended
          ref: externals-rework

      - uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle.kts') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Make gradlew executable (client)
        run: chmod +x ./gradlew
        working-directory: /home/runner/work/plugins/runelite-extended

      - name: Assembling client
        run: ./gradlew assemble --console=plain
        working-directory: /home/runner/work/plugins/runelite-extended

      - name: Building client
        run: ./gradlew build --stacktrace -x test -x checkstyleMain --console=plain
        working-directory: /home/runner/work/plugins/runelite-extended

      - name: Upload client artifacts to local maven
        run: ./gradlew publishToMavenLocal --console=plain
        working-directory: /home/runner/work/plugins/runelite-extended

      - name: Make gradlew executable (plugins)
        run: chmod +x ./gradlew

      - name: Assembling plugins
        run: ./gradlew assemble --console=plain

      - name: Building plugins
        run: ./gradlew build --stacktrace -x test -x checkstyleMain --console=plain

  test:
    runs-on: ubuntu-latest
    name: Test

    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@master
        with:
          java-version: 11

      - uses: actions/checkout@v1

      - uses: actions/checkout@v1
        with:
          repository: Owain94/runelite-extended
          ref: externals-rework

      - uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle.kts') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Make gradlew executable (client)
        run: chmod +x ./gradlew
        working-directory: /home/runner/work/plugins/runelite-extended

      - name: Assembling client
        run: ./gradlew assemble --console=plain
        working-directory: /home/runner/work/plugins/runelite-extended

      - name: Building client
        run: ./gradlew build --stacktrace -x test -x checkstyleMain --console=plain
        working-directory: /home/runner/work/plugins/runelite-extended

      - name: Upload client artifacts to local maven
        run: ./gradlew publishToMavenLocal --console=plain
        working-directory: /home/runner/work/plugins/runelite-extended

      - name: Make gradlew executable (plugins)
        run: chmod +x ./gradlew

      - name: Assembling plugins
        run: ./gradlew assemble --console=plain

      - name: Testing plugins
        run: ./gradlew test --stacktrace --console=plain

  checkstyleMain:
    runs-on: ubuntu-latest
    name: Checkstyle main

    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@master
        with:
          java-version: 11

      - uses: actions/checkout@v1

      - uses: actions/checkout@v1
        with:
          repository: Owain94/runelite-extended
          ref: externals-rework

      - uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle.kts') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Make gradlew executable (client)
        run: chmod +x ./gradlew
        working-directory: /home/runner/work/plugins/runelite-extended

      - name: Assembling client
        run: ./gradlew assemble --console=plain
        working-directory: /home/runner/work/plugins/runelite-extended

      - name: Building client
        run: ./gradlew build --stacktrace -x test -x checkstyleMain --console=plain
        working-directory: /home/runner/work/plugins/runelite-extended

      - name: Upload client artifacts to local maven
        run: ./gradlew publishToMavenLocal --console=plain
        working-directory: /home/runner/work/plugins/runelite-extended

      - name: Make gradlew executable (plugins)
        run: chmod +x ./gradlew

      - name: Assembling plugins
        run: ./gradlew assemble --console=plain

      - name: Checking plugins code conventions (Main)
        run: ./gradlew checkstyleMain --console=plain

  checkstyleTest:
    runs-on: ubuntu-latest
    name: Checkstyle test

    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@master
        with:
          java-version: 11

      - uses: actions/checkout@v1

      - uses: actions/checkout@v1
        with:
          repository: Owain94/runelite-extended
          ref: externals-rework

      - uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle.kts') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Make gradlew executable (client)
        run: chmod +x ./gradlew
        working-directory: /home/runner/work/plugins/runelite-extended

      - name: Assembling client
        run: ./gradlew assemble --console=plain
        working-directory: /home/runner/work/plugins/runelite-extended

      - name: Building client
        run: ./gradlew build --stacktrace -x test -x checkstyleMain --console=plain
        working-directory: /home/runner/work/plugins/runelite-extended

      - name: Upload client artifacts to local maven
        run: ./gradlew publishToMavenLocal --console=plain
        working-directory: /home/runner/work/plugins/runelite-extended

      - name: Make gradlew executable (plugins)
        run: chmod +x ./gradlew

      - name: Assembling plugins
        run: ./gradlew assemble --console=plain

      - name: Checking plugins code conventions (Test)
        run: ./gradlew checkstyleTest --console=plain

  bump:
    name: Bump version numbers
    needs: [build, test, checkstyleMain, checkstyleTest]
    runs-on: ubuntu-latest

    steps:
      - name: Extract actor repo
        shell: bash
        run: echo "##[set-output name=repo;]$(echo $(jq --raw-output .pull_request.head.repo.full_name "$GITHUB_EVENT_PATH"))"
        id: extract_actor_repo

      - name: Extract actor repo branch
        shell: bash
        run: echo "##[set-output name=branch;]$(echo $(jq --raw-output .pull_request.head.ref "$GITHUB_EVENT_PATH"))"
        id: extract_actor_repo_branch

      - id: changedFiles
        name: Changed files exporter
        uses: futuratrepadeira/changed-files@v3.0.0
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up JDK 11
        uses: actions/setup-java@master
        with:
          java-version: 11

      - uses: actions/checkout@v1

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Bump version numbers
        run: ./gradlew bumpVersion --newFiles="${{ steps.changedFiles.outputs.files_created }}" --changedFiles="${{ steps.changedFiles.outputs.files_updated }}" --console=plain

      - name: Commit changed files
        run: |
          git add \*.kts
          git diff-index --quiet HEAD \
          || git -c user.name="GitHub" -c user.email="noreply@github.com" commit \
            --author="github-actions[bot] <41898282+github-actions[bot]@users.noreply.github.com>" \
            -m "Bump version(s)"

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ steps.extract_actor_repo.outputs.repo }}
          branch: ${{ steps.extract_actor_repo_branch.outputs.branch }}

  approve:
    name: Approve
    needs: [build, test, checkstyleMain, checkstyleTest, bump]
    runs-on: ubuntu-latest

    steps:
      - name: Approve pull request
        if: github.event_name == 'pull_request' && github.actor == 'OpenOSRS'
        uses: hmarr/auto-approve-action@v2.0.0
        with:
          github-token: ${{ secrets.Owain }}